# tasks file for 6584
- name: resoconto in file {{ logfile }}
  shell: echo "Applicato il bug {{bug}} dall'utente $USER in data $(date +%d-%m-%Y_%H:%M:%S) sui server {{inventory_hostname}} " >> {{ logfile }}
  delegate_to: localhost
  changed_when: false
- name: resoconto in database ansible
  shell: mysql --user=ansible_update --password=$(cat /home/password_insert) -e "insert into ansible.bugs values ( '{{bug}}','$USER','$(date +%d-%m-%Y_%H:%M:%S)','{{inventory_hostname}}');"
  delegate_to: localhost
  changed_when: false

- name: "controllo la presenza del file {{ script }}"
  stat:
    path: "{{ script }}"
  register: presenza_file
- name: "controllo la presenza del path {{ path_log_form }}"
  stat:
    path: "{{ path_log_form }}"
  register: presenza_path

- block:
  - name: "Controllo se la stringa formconfigurator è già presente in {{ script }}"
    shell: "grep -i formconfigurator {{ script}}"
    changed_when: false
    check_mode: false
    failed_when: false
    register: form_presente

  - fail: msg="Ho già trovato la riga formconfigurator all'interno del file {{ script }}. Non eseguo modifiche"
    when: form_presente.rc == 0

  - name: "Controllo se nel file {{ script }} è presente {{ path|default('path4')}}"
    shell: "grep {{ path|default('path4')}} {{ script }}"
    changed_when: false
    check_mode: false
    failed_when: false
    register: check_path

  - fail: msg="Ho trovato {{ path|default('path4')}} all'interno del file  {{ script }}. Rilancia il playbook con un parametro path differente"
    when: check_path.rc == 0

# esegui l'inserimento all'interno del file
 
  - lineinfile:
     backup: true
     path: "{{ script}}"
     line: "{{ item }}"
     insertafter: 'path[1-9]='
    with_items:
    - "{{ path|default('path4') }}={{ path_log_form }}"

  - lineinfile:
     backup: true
     path: "{{ script}}"
     line: "{{ item }}"
    with_items:
    - "nice -19 find ${{ path|default('path4') }} -maxdepth 1 -mtime +${HISTORY} -name \"FormConfigurator.log_2*\" -exec rm -f {} \\;"

  when:
  - presenza_file.stat.exists
  - presenza_path.stat.exists
